var fs = require('fs'),
    path = require('path'),
    AdmZip = require('adm-zip');


module.exports = function (dirName, callback) {

    var booksPath = dirName + '/books/',
        cachePath = booksPath + 'cache/';

    function unzipBooks(bookFile, extractPath) {
        var bookName = path.basename(bookFile, '.etb');
        var location = cachePath + bookName;
        var zip = new AdmZip(extractPath + bookFile);
        zip.extractAllTo(location, true);
        console.log(bookName + ' added')
    }

    function extractNewBooks(booksPath, callback) {
        fs.readdir(booksPath, function (err, books) {
            if (err) callback(err);
            else {
                books
                    .filter (function (book) {return path.extname(book) === ".etb";})
                    .filter (function (book) {return !fs.existsSync(cachePath + path.basename(book, '.etb'));})
                    .forEach(function (book) {unzipBooks(book, booksPath);});
                callback(null);
            }
        })
    }


    function getBookDirectoriesList(cachePath, callback) {
        fs.readdir(cachePath, function (err, files) {
            var directories = [];
            files
                .map    (function (file) {return path.join(cachePath, file);})
                .filter (function (file) {return fs.statSync(file).isDirectory();})
                .filter (function (file) {return fs.existsSync(file + '/book.info');})
                .forEach(function (file) {directories.push(file);});
            callback(null, directories);
        });
    }

    extractNewBooks(booksPath, function (err) {
        if (!err)
            getBookDirectoriesList(cachePath, function (err, cb) {
                if (!err)
                    callback(null, cb);
                else callback(err, null);
            });

        else callback(err, null);
    });
};
